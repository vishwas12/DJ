<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xmlns:sec="http://www.springframework.org/schema/security"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
                      http://www.springframework.org/schema/beans/spring-beans.xsd
					  http://www.springframework.org/schema/security/oauth2
					  http://www.springframework.org/schema/security/spring-security-oauth2.xsd
					  http://www.springframework.org/schema/security
					  http://www.springframework.org/schema/security/spring-security.xsd">

			<oauth:authorization-server client-details-service-ref="client-details-service" token-services-ref="tokenServices" user-approval-handler-ref="userApprovalHandler">
        <oauth:refresh-token/>
        <oauth:password/>
    	</oauth:authorization-server>

    	<oauth:resource-server id="resourceServerFilter" token-services-ref="tokenServices" token-extractor-ref="tokenExtractor" />

      <bean id="requestFactory"
        class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory">
        <constructor-arg name="clientDetailsService" ref="client-details-service" />
      </bean>
   
      <bean id="userApprovalHandler" class="org.springframework.security.oauth2.provider.approval.TokenStoreUserApprovalHandler">
          <property name="tokenStore" ref="tokenStore"/>
          <property name="requestFactory" ref="requestFactory" />
      </bean>

    	<bean id="tokenExtractor" class="com.dj.security.CustomBearerTokenExtractor" />

    	<bean id="clientCredentialsTokenEndpointFilter"
          class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <property name="authenticationManager" ref="clientAuthenticationManager"/>
        <property name="allowOnlyPost" value="true"/>
    	</bean>

    	<bean id="clientAuthenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="typeName" value="Basic"/>
	    </bean>

	    <bean id="oauthAuthenticationEntryPoint"
	          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
	        <property name="realmName" value="test"/>
	    </bean>

	    <bean id="oauthAccessDeniedHandler"
          class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>


	    <bean id="tokenServices"
        class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="tokenStore" />
        <property name="supportRefreshToken" value="true" />
        <property name="clientDetailsService" ref="client-details-service" />
        <property name="tokenEnhancer" ref="tokenEnhancer"/>
    	</bean>

    	<bean id="tokenEnhancer" class="com.dj.security.AccessTokenEnhancer"/>

    	<http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="clientAuthenticationManager"
          xmlns="http://www.springframework.org/schema/security">
        <anonymous enabled="false"/>
				<intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
  			<anonymous enabled="false" />
      	<http-basic entry-point-ref="clientAuthenticationEntryPoint" />
  			<custom-filter ref="clientCredentialsTokenEndpointFilter"
   			after="BASIC_AUTH_FILTER" />
      	<access-denied-handler ref="oauthAccessDeniedHandler"/>   
    	</http>

</beans>